uniform sampler2D positionTexture;
uniform sampler2D normalTexture;
uniform primitive environmentPrimitive;

uniformblock ShootingPrimitive
{
    vec3 Positions[4];
};

void setup() 
{
	rl_OutputRayCount = 1;
}

void main()
{
	vec2 uv = rl_FrameCoord.xy / rl_FrameSize.xy;
    vec3 WorldPosition = texture2D(positionTexture, uv).xyz;
    vec3 WorldNormal = texture2D(normalTexture, uv).xyz;

	//	Shoot to centroid position 
	vec3 Direction = ShootingPrimitive.Positions[0] - WorldPosition;

	createRay();
   	rl_OutRay.origin              = WorldPosition + WorldNormal * vec3(0.005, 0.005, 0.005);	//	Offset origin
	rl_OutRay.direction           = normalize(Direction);
	rl_OutRay.defaultPrimitive    = environmentPrimitive;
	emitRay();
}